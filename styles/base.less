@import "syntax-variables";

// Syntax styles

.syntax--none {
    color: @syntax-text-color;
}

.syntax--comment {
    color: @comment;
}

.syntax--keyword {
    color: @keyword;
    font-weight: bold;

    &.syntax--type {
        color: @type;
    }

    &.syntax--control {
        &.syntax--directive {
            color: @func;

            &.syntax--pragma.syntax--use {
                color: @keyword;
            }
        }
    }

    &.syntax--operator {
        color: @syntax-text-color;
        font-weight: normal;

        &.syntax--new,
        &.syntax--sizeof,
        &.syntax--typeof {
            color: @keyword;
            font-weight: bold;
        }
    }

    &.syntax--other {
        &.syntax--import,
        &.syntax--package {
            color: @func;
        }
    }
}

.syntax--storage {
    color: @type;
    font-weight: bold;

    &.syntax--modifier {
        color: @keyword;
    }

    &.syntax--type {
        color: @keyword;

        &.syntax--numeric,
        &.syntax--primitive,
        &.syntax--string {
            color: @type;
        }
    }
}

.syntax--constant {
    color: @const;
    font-weight: normal;

    &.syntax--character {
        color: @str;
    }

    &.syntax--other {
        color: @var;

        &.syntax--object {
            color: @syntax-text-color;
        }

        &.syntax--placeholder {
            color: @str;
        }
    }
}

.syntax--variable {
    &.syntax--parameter {
        color: @syntax-text-color;
        font-weight: normal;
    }

    &.syntax--language {
        color: @keyword;
        font-weight: bold;
    }

    &.syntax--other {
        color: @var;

        &.syntax--object {
            color: @syntax-text-color;

            &.syntax--property {
                color: @var;
            }
        }
    }
}

.syntax--string {
    color: @str;

    &.syntax--regexp {
        .syntax--bracket,
        .syntax--character,
        .syntax--control,
        .syntax--embedded,
        .syntax--modifier,
        .syntax--operator,
        .syntax--other {
            color: @str;
            font-weight: normal;
        }
    }
}

.syntax--punctuation {
    &.syntax--definition,
    &.syntax--section {
        color: @keyword;

        &.syntax--comment {
            color: @comment;
        }

        &.syntax--embedded,
        &.syntax--interpolation,
        &.syntax--regexp,
        &.syntax--string {
            color: @str;
            font-weight: normal;
        }

        &.syntax--arguments,
        &.syntax--inheritance,
        &.syntax--parameters {
            color: @keyword;
            font-weight: normal;
        }

        &.syntax--variable {
            color: @var;
        }

        &.syntax--tag {
            color: @syntax-text-color;
        }

        &.syntax--directive,
        &.syntax--entity {
            color: @func;
        }
    }

    &.syntax--separator {
        color: @syntax-text-color;
        font-weight: normal;
    }
}

.syntax--support {
    &.syntax--class {
        color: @type;
        font-weight: bold;
    }

    &.syntax--function {
        color: @func;

        &.syntax--builtin,
        &.syntax--kernel,
        &.syntax--super,
        &.syntax--viewhelpers {
            color: @keyword;
        }
    }

    &.syntax--constant {
        color: @syntax-text-color;
    }

    &.syntax--type {
        color: @type;
        font-weight: bold;
    }
}

.syntax--entity {
    &.syntax--name {
        &.syntax--function {
            color: @func;

            &.syntax--target {
                font-weight: bold;
            }

            .syntax--preprocessor {
                color: @var;
            }
        }

        &.syntax--class,
        &.syntax--type {
            color: @type;
            font-weight: bold;
        }

        &.syntax--tag {
            color: @keyword;
        }
    }

    &.syntax--other {
        &.syntax--inherited-class {
            color: @syntax-text-color;
            font-weight: normal;
        }

        &.syntax--attribute-name {
            color: @func;

            &.syntax--pragma {
                color: @syntax-text-color;
            }
        }
    }
}

.syntax--meta {
    &.syntax--class {
        color: @type;
        font-weight: bold;

        &.syntax--body {
            color: @syntax-text-color;
            font-weight: normal;
        }
    }

    &.syntax--function {
        font-weight: bold;
    }

    &.syntax--function,
    &.syntax--function-call {
        &.syntax--arguments,
        &.syntax--method {
            color: @syntax-text-color;
            font-weight: normal;
        }
    }

    &.syntax--method.syntax--body {
        color: @syntax-text-color;
        font-weight: normal;
    }

    &.syntax--class-struct-block {
        .syntax--storage.syntax--type {
            color: @keyword;
        }
    }
}

.syntax--markup {
    &.syntax--bold {
        font-weight: bold;
    }

    &.syntax--italic {
        font-style: italic;
    }

    &.syntax--strike {
        text-decoration: line-through;
    }

    &.syntax--changed {
        color: @syntax-color-modified;
    }

    &.syntax--deleted {
        color: @syntax-color-removed;
    }

    &.syntax--inserted {
        color: @syntax-color-added;
    }

    &.syntax--raw {
        color: @const;
    }

    &.syntax--underline.syntax--link {
        color: @comment;
        text-decoration: underline;
    }
}

.syntax--invalid.syntax--illegal {
    background-color: @err;
    color: @syntax-background-color;
}
