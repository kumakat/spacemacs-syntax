@import "syntax-variables";

// Syntax styles

.syntax--comment {
    color: @comment;
}

.syntax--keyword {
    color: @keyword;

    &.syntax--control {
        color: @keyword;
        font-weight: bold;

        &.syntax--directive {
            color: @func;
        }

        &.syntax--cite,
        &.syntax--label,
        &.syntax--ref {
            font-weight: normal;
        }
    }

    &.syntax--operator {
        color: @syntax-text-color;

        &.syntax--new {
            color: @keyword;
            font-weight: bold;
        }
    }

    &.syntax--other.syntax--special-method {
        color: @keyword;
    }

    &.syntax--other.syntax--unit {
        color: @syntax-text-color;
    }
}

.syntax--modifier {
    color: @keyword;
    font-weight: bold;
}

.syntax--storage {
    color: @type;

    &.syntax--class,
    &.syntax--modifier {
        color: @keyword;
        font-weight: bold;
    }

    &.syntax--type {
        color: @keyword;
        font-weight: bold;
    }

    &.syntax--string {
        color: @str;
    }
}

.syntax--constant {
    color: @const;

    &.syntax--character {
        &.syntax--escape {
            color: @str;
        }

        &.syntax--math {
            color: @keyword;
        }
    }

    &.syntax--numeric {
        color: @const;
        font-weight: normal;
    }

    &.syntax--other {
        color: @var;

        &.syntax--color {
            color: @syntax-text-color;
        }

        &.syntax--symbol {
            color: @syntax-text-color;
        }

        &.syntax--reference {
            color: @func;
            font-weight: normal;
        }
    }
}

.syntax--variable {
    color: @var;

    &.syntax--interpolation {
        color: @syntax-text-color;
    }

    &.syntax--parameter {
        color: @syntax-text-color;

        &.syntax--function {
            font-weight: normal;
        }
    }

    &.syntax--language {
        color: @syntax-text-color;

        &.syntax--special {
            color: @keyword;
            font-weight: bold;
        }
    }
}

.syntax--invalid.syntax--illegal {
    background-color: @err;
    color: @syntax-background-color;
}

.syntax--string {
    color: @str;

    &.syntax--regexp {
        color: @str;

        .syntax--source.syntax--ruby.syntax--embedded {
            color: @str;
        }
    }

    &.syntax--other.syntax--link {
        color: @comment;
    }
}

.syntax--punctuation {
    &.syntax--definition {
        color: @keyword;

        &.syntax--comment {
            color: @comment;
        }

        &.syntax--string {
            color: @str;
        }

        &.syntax--function {
            color: @keyword;
        }

        &.syntax--parameters {
            color: @keyword;
        }

        &.syntax--variable {
            color: @var;
        }

        &.syntax--inheritance {
            color: @keyword;
        }

        &.syntax--tag {
            color: @syntax-text-color;
        }

        &.syntax--array {
            color: @keyword;
        }

        &.syntax--decorator {
            color: @type;
        }

        &.syntax--entity {
            color: @func;
        }

        &.syntax--heading,
        &.syntax--identity {
            color: @keyword;
        }

        &.syntax--bold {
            color: @magenta;
            font-weight: bold;
        }

        &.syntax--italic {
            color: @yellow;
            font-style: italic;
        }
    }

    &.syntax--section {
        color: @keyword;

        &.syntax--embedded {
            color: @comment;
        }
    }

    &.syntax--separator {
        color: @syntax-text-color;
    }
}

.syntax--support {
    &.syntax--class {
        color: @keyword;
    }

    &.syntax--function {
        color: @func;

        &.syntax--be,
        &.syntax--general,
        &.syntax--section {
            color: @keyword;
        }
    }

    &.syntax--storage {
        color: @type;
        font-weight: bold;
    }

    &.syntax--constant {
        color: @syntax-text-color;
    }

    &.syntax--type.syntax--property-name {
        color: @keyword;
    }
}

.syntax--entity {
    &.syntax--name.syntax--function {
        color: @func;

        &.syntax--decorator {
            color: @type;
            font-weight: bold;
        }
    }

    &.syntax--name.syntax--class,
    &.syntax--name.syntax--type {
        color: @type;
        font-weight: bold;
    }

    &.syntax--name.syntax--section {
        color: @comment;
    }

    &.syntax--name.syntax--tag {
        color: @keyword;
        text-decoration: none;

        &.syntax--css {
            color: @func;
        }
    }

    &.syntax--other.syntax--inherited-class {
        color: @syntax-text-color;
    }

    &.syntax--other.syntax--attribute-name {
        color: @func;
        font-weight: normal;
        text-decoration: none;
    }
}

.syntax--meta {
    &.syntax--class {
        color: @type;
        font-weight: bold;

        &.syntax--inheritance {
            color: @syntax-text-color;
            font-weight: normal;
        }
    }

    &.syntax--function {
        color: @func;
        font-weight: bold;
    }

    &.syntax--link {
        color: @comment;
    }

    &.syntax--require {
        color: @func;
    }

    &.syntax--selector {
        color: @syntax-text-color;
    }

    &.syntax--property-name {
        color: @keyword;
    }

    &.syntax--separator {
        background-color: @bg1;
        color: @syntax-text-color;
    }

    &.syntax--fstring {
        color: @str;
    }

    &.syntax--attribute-with-value,
    &.syntax--environment {
        font-weight: normal;
    }
}

.syntax--none {
    color: @syntax-text-color;
}

.syntax--markup {
    &.syntax--bold {
        color: @magenta;
        font-weight: bold;
    }

    &.syntax--italic {
        color: @yellow;
        font-style: italic;
    }

    &.syntax--changed {
        color: @syntax-color-modified;
    }

    &.syntax--deleted {
        color: @syntax-color-removed;
    }

    &.syntax--inserted {
        color: @syntax-color-added;
    }

    &.syntax--list {
        color: @keyword;
    }

    &.syntax--quote {
        color: @str;
    }

    &.syntax--raw.syntax--inline {
        color: @const;
    }
}
